{"version":3,"file":"single-spa.min.js","sources":["../../node_modules/custom-event/index.js","../../src/applications/app-errors.js","../../src/applications/app.helpers.js","../../src/utils/assign.js","../../src/utils/find.js","../../src/lifecycles/lifecycle.helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/unmount.js","../../src/lifecycles/mount.js","../../src/parcels/mount-parcel.js","../../src/lifecycles/update.js","../../src/lifecycles/prop.helpers.js","../../src/applications/timeouts.js","../../src/lifecycles/load.js","../../src/utils/runtime-environment.js","../../src/navigation/navigation-events.js","../../src/jquery-support.js","../../src/lifecycles/unload.js","../../src/applications/apps.js","../../src/navigation/reroute.js","../../src/start.js","../../src/devtools/devtools.js","../../src/single-spa.js"],"sourcesContent":["\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n","import { objectType, toName } from \"./app.helpers\";\n\nlet errorHandlers = [];\n\nexport function handleAppError(err, app, newStatus) {\n  const transformedErr = transformErr(err, app, newStatus);\n\n  if (errorHandlers.length) {\n    errorHandlers.forEach((handler) => handler(transformedErr));\n  } else {\n    setTimeout(() => {\n      throw transformedErr;\n    });\n  }\n}\n\nexport function addErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        28,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  errorHandlers.push(handler);\n}\n\nexport function removeErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        29,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  let removedSomething = false;\n  errorHandlers = errorHandlers.filter((h) => {\n    const isHandler = h === handler;\n    removedSomething = removedSomething || isHandler;\n    return !isHandler;\n  });\n\n  return removedSomething;\n}\n\nexport function formatErrorMessage(code, msg, ...args) {\n  return `single-spa minified message #${code}: ${\n    msg ? msg + \" \" : \"\"\n  }See https://single-spa.js.org/error/?code=${code}${\n    args.length ? `&arg=${args.join(\"&arg=\")}` : \"\"\n  }`;\n}\n\nexport function transformErr(ogErr, appOrParcel, newStatus) {\n  const errPrefix = `${objectType(appOrParcel)} '${toName(\n    appOrParcel\n  )}' died in status ${appOrParcel.status}: `;\n\n  let result;\n\n  if (ogErr instanceof Error) {\n    try {\n      ogErr.message = errPrefix + ogErr.message;\n    } catch (err) {\n      /* Some errors have read-only message properties, in which case there is nothing\n       * that we can do.\n       */\n    }\n    result = ogErr;\n  } else {\n    console.warn(\n      formatErrorMessage(\n        30,\n        __DEV__ &&\n          `While ${appOrParcel.status}, '${toName(\n            appOrParcel\n          )}' rejected its lifecycle function promise with a non-Error. This will cause stack traces to not be accurate.`,\n        appOrParcel.status,\n        toName(appOrParcel)\n      )\n    );\n    try {\n      result = Error(errPrefix + JSON.stringify(ogErr));\n    } catch (err) {\n      // If it's not an Error and you can't stringify it, then what else can you even do to it?\n      result = ogErr;\n    }\n  }\n\n  result.appOrParcelName = toName(appOrParcel);\n\n  // We set the status after transforming the error so that the error message\n  // references the state the application was in before the status change.\n  appOrParcel.status = newStatus;\n\n  return result;\n}\n","import { handleAppError } from \"./app-errors.js\";\n\n// App statuses\nexport const NOT_LOADED = \"NOT_LOADED\";\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\";\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\";\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\";\nexport const NOT_MOUNTED = \"NOT_MOUNTED\";\nexport const MOUNTING = \"MOUNTING\";\nexport const MOUNTED = \"MOUNTED\";\nexport const UPDATING = \"UPDATING\";\nexport const UNMOUNTING = \"UNMOUNTING\";\nexport const UNLOADING = \"UNLOADING\";\nexport const LOAD_ERROR = \"LOAD_ERROR\";\nexport const SKIP_BECAUSE_BROKEN = \"SKIP_BECAUSE_BROKEN\";\n\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\nexport function isntActive(app) {\n  return !isActive(app);\n}\n\nexport function isLoaded(app) {\n  return (\n    app.status !== NOT_LOADED &&\n    app.status !== LOADING_SOURCE_CODE &&\n    app.status !== LOAD_ERROR\n  );\n}\n\nexport function isntLoaded(app) {\n  return !isLoaded(app);\n}\n\nexport function shouldBeActive(app) {\n  try {\n    return app.activeWhen(window.location);\n  } catch (err) {\n    handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  }\n}\n\nexport function shouldntBeActive(app) {\n  try {\n    return !shouldBeActive(app);\n  } catch (err) {\n    handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  }\n}\n\nexport function notSkipped(item) {\n  return (\n    item !== SKIP_BECAUSE_BROKEN &&\n    (!item || item.status !== SKIP_BECAUSE_BROKEN)\n  );\n}\n\nexport function withoutLoadErrors(app) {\n  return app.status === LOAD_ERROR\n    ? new Date().getTime() - app.loadErrorTime >= 200\n    : true;\n}\n\nexport function toName(app) {\n  return app.name;\n}\n\nexport function isParcel(appOrParcel) {\n  return Boolean(appOrParcel.unmountThisParcel);\n}\n\nexport function objectType(appOrParcel) {\n  return isParcel(appOrParcel) ? \"parcel\" : \"application\";\n}\n","// Object.assign() is not available in IE11. And the babel compiled output for object spread\n// syntax checks a bunch of Symbol stuff and is almost a kb. So this function is the smaller replacement.\nexport function assign() {\n  for (let i = arguments.length - 1; i > 0; i--) {\n    for (let key in arguments[i]) {\n      if (key === \"__proto__\") {\n        continue;\n      }\n      arguments[i - 1][key] = arguments[i][key];\n    }\n  }\n\n  return arguments[0];\n}\n","/* the array.prototype.find polyfill on npmjs.com is ~20kb (not worth it)\n * and lodash is ~200kb (not worth it)\n */\n\nexport function find(arr, func) {\n  for (let i = 0; i < arr.length; i++) {\n    if (func(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n","import { find } from \"../utils/find.js\";\nimport { objectType, toName } from \"../applications/app.helpers.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nexport function validLifecycleFn(fn) {\n  return fn && (typeof fn === \"function\" || isArrayOfFns(fn));\n\n  function isArrayOfFns(arr) {\n    return (\n      Array.isArray(arr) && !find(arr, (item) => typeof item !== \"function\")\n    );\n  }\n}\n\nexport function flattenFnArray(appOrParcel, lifecycle) {\n  let fns = appOrParcel[lifecycle] || [];\n  fns = Array.isArray(fns) ? fns : [fns];\n  if (fns.length === 0) {\n    fns = [() => Promise.resolve()];\n  }\n\n  const type = objectType(appOrParcel);\n  const name = toName(appOrParcel);\n\n  return function (props) {\n    return fns.reduce((resultPromise, fn, index) => {\n      return resultPromise.then(() => {\n        const thisPromise = fn(props);\n        return smellsLikeAPromise(thisPromise)\n          ? thisPromise\n          : Promise.reject(\n              formatErrorMessage(\n                15,\n                __DEV__ &&\n                  `Within ${type} ${name}, the lifecycle function ${lifecycle} at array index ${index} did not return a promise`,\n                type,\n                name,\n                lifecycle,\n                index\n              )\n            );\n      });\n    }, Promise.resolve());\n  };\n}\n\nexport function smellsLikeAPromise(promise) {\n  return (\n    promise &&\n    typeof promise.then === \"function\" &&\n    typeof promise.catch === \"function\"\n  );\n}\n","import {\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\n\nexport function toBootstrapPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_BOOTSTRAPPED) {\n      return appOrParcel;\n    }\n\n    appOrParcel.status = BOOTSTRAPPING;\n\n    return reasonableTime(appOrParcel, \"bootstrap\")\n      .then(() => {\n        appOrParcel.status = NOT_MOUNTED;\n        return appOrParcel;\n      })\n      .catch((err) => {\n        if (hardFail) {\n          throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n        } else {\n          handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          return appOrParcel;\n        }\n      });\n  });\n}\n","import {\n  UNMOUNTING,\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nexport function toUnmountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== MOUNTED) {\n      return appOrParcel;\n    }\n    appOrParcel.status = UNMOUNTING;\n\n    const unmountChildrenParcels = Object.keys(\n      appOrParcel.parcels\n    ).map((parcelId) => appOrParcel.parcels[parcelId].unmountThisParcel());\n\n    let parcelError;\n\n    return Promise.all(unmountChildrenParcels)\n      .then(unmountAppOrParcel, (parcelError) => {\n        // There is a parcel unmount error\n        return unmountAppOrParcel().then(() => {\n          // Unmounting the app/parcel succeeded, but unmounting its children parcels did not\n          const parentError = Error(parcelError.message);\n          if (hardFail) {\n            throw transformErr(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        });\n      })\n      .then(() => appOrParcel);\n\n    function unmountAppOrParcel() {\n      // We always try to unmount the appOrParcel, even if the children parcels failed to unmount.\n      return reasonableTime(appOrParcel, \"unmount\")\n        .then(() => {\n          // The appOrParcel needs to stay in a broken status if its children parcels fail to unmount\n          if (!parcelError) {\n            appOrParcel.status = NOT_MOUNTED;\n          }\n        })\n        .catch((err) => {\n          if (hardFail) {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        });\n    }\n  });\n}\n","import {\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport CustomEvent from \"custom-event\";\nimport { toUnmountPromise } from \"./unmount.js\";\n\nlet beforeFirstMountFired = false;\nlet firstMountFired = false;\n\nexport function toMountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_MOUNTED) {\n      return appOrParcel;\n    }\n\n    if (!beforeFirstMountFired) {\n      window.dispatchEvent(new CustomEvent(\"single-spa:before-first-mount\"));\n      beforeFirstMountFired = true;\n    }\n\n    return reasonableTime(appOrParcel, \"mount\")\n      .then(() => {\n        appOrParcel.status = MOUNTED;\n\n        if (!firstMountFired) {\n          window.dispatchEvent(new CustomEvent(\"single-spa:first-mount\"));\n          firstMountFired = true;\n        }\n\n        return appOrParcel;\n      })\n      .catch((err) => {\n        // If we fail to mount the appOrParcel, we should attempt to unmount it before putting in SKIP_BECAUSE_BROKEN\n        // We temporarily put the appOrParcel into MOUNTED status so that toUnmountPromise actually attempts to unmount it\n        // instead of just doing a no-op.\n        appOrParcel.status = MOUNTED;\n        return toUnmountPromise(appOrParcel, true).then(\n          setSkipBecauseBroken,\n          setSkipBecauseBroken\n        );\n\n        function setSkipBecauseBroken() {\n          if (!hardFail) {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n            return appOrParcel;\n          } else {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        }\n      });\n  });\n}\n","import {\n  validLifecycleFn,\n  flattenFnArray,\n} from \"../lifecycles/lifecycle.helpers.js\";\nimport {\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n  MOUNTED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUpdatePromise } from \"../lifecycles/update.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nlet parcelCount = 0;\nconst rootParcels = { parcels: {} };\n\n// This is a public api, exported to users of single-spa\nexport function mountRootParcel() {\n  return mountParcel.apply(rootParcels, arguments);\n}\n\nexport function mountParcel(config, customProps) {\n  const owningAppOrParcel = this;\n\n  // Validate inputs\n  if (!config || (typeof config !== \"object\" && typeof config !== \"function\")) {\n    throw Error(\n      formatErrorMessage(\n        2,\n        __DEV__ &&\n          \"Cannot mount parcel without a config object or config loading function\"\n      )\n    );\n  }\n\n  if (config.name && typeof config.name !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        3,\n        __DEV__ &&\n          `Parcel name must be a string, if provided. Was given ${typeof config.name}`,\n        typeof config.name\n      )\n    );\n  }\n\n  if (typeof customProps !== \"object\") {\n    throw Error(\n      formatErrorMessage(\n        4,\n        __DEV__ &&\n          `Parcel ${name} has invalid customProps -- must be an object but was given ${typeof customProps}`,\n        name,\n        typeof customProps\n      )\n    );\n  }\n\n  if (!customProps.domElement) {\n    throw Error(\n      formatErrorMessage(\n        5,\n        __DEV__ &&\n          `Parcel ${name} cannot be mounted without a domElement provided as a prop`,\n        name\n      )\n    );\n  }\n\n  const id = parcelCount++;\n\n  const passedConfigLoadingFunction = typeof config === \"function\";\n  const configLoadingFunction = passedConfigLoadingFunction\n    ? config\n    : () => Promise.resolve(config);\n\n  // Internal representation\n  const parcel = {\n    id,\n    parcels: {},\n    status: passedConfigLoadingFunction\n      ? LOADING_SOURCE_CODE\n      : NOT_BOOTSTRAPPED,\n    customProps,\n    parentName: toName(owningAppOrParcel),\n    unmountThisParcel() {\n      if (parcel.status !== MOUNTED) {\n        throw Error(\n          formatErrorMessage(\n            6,\n            __DEV__ &&\n              `Cannot unmount parcel '${name}' -- it is in a ${parcel.status} status`,\n            name,\n            parcel.status\n          )\n        );\n      }\n\n      return toUnmountPromise(parcel, true)\n        .then((value) => {\n          if (parcel.parentName) {\n            delete owningAppOrParcel.parcels[parcel.id];\n          }\n\n          return value;\n        })\n        .then((value) => {\n          resolveUnmount(value);\n          return value;\n        })\n        .catch((err) => {\n          parcel.status = SKIP_BECAUSE_BROKEN;\n          rejectUnmount(err);\n          throw err;\n        });\n    },\n  };\n\n  // We return an external representation\n  let externalRepresentation;\n\n  // Add to owning app or parcel\n  owningAppOrParcel.parcels[id] = parcel;\n\n  let loadPromise = configLoadingFunction();\n\n  if (!loadPromise || typeof loadPromise.then !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        7,\n        __DEV__ &&\n          `When mounting a parcel, the config loading function must return a promise that resolves with the parcel config`\n      )\n    );\n  }\n\n  loadPromise = loadPromise.then((config) => {\n    if (!config) {\n      throw Error(\n        formatErrorMessage(\n          8,\n          __DEV__ &&\n            `When mounting a parcel, the config loading function returned a promise that did not resolve with a parcel config`\n        )\n      );\n    }\n\n    const name = config.name || `parcel-${id}`;\n\n    if (!validLifecycleFn(config.bootstrap)) {\n      throw Error(\n        formatErrorMessage(\n          9,\n          __DEV__ && `Parcel ${name} must have a valid bootstrap function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.mount)) {\n      throw Error(\n        formatErrorMessage(\n          10,\n          __DEV__ && `Parcel ${name} must have a valid mount function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.unmount)) {\n      throw Error(\n        formatErrorMessage(\n          11,\n          __DEV__ && `Parcel ${name} must have a valid unmount function`,\n          name\n        )\n      );\n    }\n\n    if (config.update && !validLifecycleFn(config.update)) {\n      throw Error(\n        formatErrorMessage(\n          12,\n          __DEV__ && `Parcel ${name} provided an invalid update function`,\n          name\n        )\n      );\n    }\n\n    const bootstrap = flattenFnArray(config, \"bootstrap\");\n    const mount = flattenFnArray(config, \"mount\");\n    const unmount = flattenFnArray(config, \"unmount\");\n\n    parcel.status = NOT_BOOTSTRAPPED;\n    parcel.name = name;\n    parcel.bootstrap = bootstrap;\n    parcel.mount = mount;\n    parcel.unmount = unmount;\n    parcel.timeouts = ensureValidAppTimeouts(config.timeouts);\n\n    if (config.update) {\n      parcel.update = flattenFnArray(config, \"update\");\n      externalRepresentation.update = function (customProps) {\n        parcel.customProps = customProps;\n\n        return promiseWithoutReturnValue(toUpdatePromise(parcel));\n      };\n    }\n  });\n\n  // Start bootstrapping and mounting\n  // The .then() causes the work to be put on the event loop instead of happening immediately\n  const bootstrapPromise = loadPromise.then(() =>\n    toBootstrapPromise(parcel, true)\n  );\n  const mountPromise = bootstrapPromise.then(() =>\n    toMountPromise(parcel, true)\n  );\n\n  let resolveUnmount, rejectUnmount;\n\n  const unmountPromise = new Promise((resolve, reject) => {\n    resolveUnmount = resolve;\n    rejectUnmount = reject;\n  });\n\n  externalRepresentation = {\n    mount() {\n      return promiseWithoutReturnValue(\n        Promise.resolve().then(() => {\n          if (parcel.status !== NOT_MOUNTED) {\n            throw Error(\n              formatErrorMessage(\n                13,\n                __DEV__ &&\n                  `Cannot mount parcel '${name}' -- it is in a ${parcel.status} status`,\n                name,\n                parcel.status\n              )\n            );\n          }\n\n          // Add to owning app or parcel\n          owningAppOrParcel.parcels[id] = parcel;\n\n          return toMountPromise(parcel);\n        })\n      );\n    },\n    unmount() {\n      return promiseWithoutReturnValue(parcel.unmountThisParcel());\n    },\n    getStatus() {\n      return parcel.status;\n    },\n    loadPromise: promiseWithoutReturnValue(loadPromise),\n    bootstrapPromise: promiseWithoutReturnValue(bootstrapPromise),\n    mountPromise: promiseWithoutReturnValue(mountPromise),\n    unmountPromise: promiseWithoutReturnValue(unmountPromise),\n  };\n\n  return externalRepresentation;\n}\n\nfunction promiseWithoutReturnValue(promise) {\n  return promise.then(() => null);\n}\n","import {\n  UPDATING,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport {\n  transformErr,\n  formatErrorMessage,\n} from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nexport function toUpdatePromise(parcel) {\n  return Promise.resolve().then(() => {\n    if (parcel.status !== MOUNTED) {\n      throw Error(\n        formatErrorMessage(\n          32,\n          __DEV__ &&\n            `Cannot update parcel '${toName(\n              parcel\n            )}' because it is not mounted`,\n          toName(parcel)\n        )\n      );\n    }\n\n    parcel.status = UPDATING;\n\n    return reasonableTime(parcel, \"update\")\n      .then(() => {\n        parcel.status = MOUNTED;\n        return parcel;\n      })\n      .catch((err) => {\n        throw transformErr(err, parcel, SKIP_BECAUSE_BROKEN);\n      });\n  });\n}\n","import * as singleSpa from \"../single-spa.js\";\nimport { mountParcel } from \"../parcels/mount-parcel.js\";\nimport { assign } from \"../utils/assign.js\";\nimport { isParcel, toName } from \"../applications/app.helpers.js\";\n\nexport function getProps(appOrParcel) {\n  const result = assign({}, appOrParcel.customProps, {\n    name: toName(appOrParcel),\n    mountParcel: mountParcel.bind(appOrParcel),\n    singleSpa,\n  });\n\n  if (isParcel(appOrParcel)) {\n    result.unmountSelf = appOrParcel.unmountThisParcel;\n  }\n\n  return result;\n}\n","import { assign } from \"../utils/assign\";\nimport { getProps } from \"../lifecycles/prop.helpers\";\nimport { objectType, toName } from \"./app.helpers\";\nimport { formatErrorMessage } from \"./app-errors\";\n\nconst defaultWarningMillis = 1000;\n\nconst globalTimeoutConfig = {\n  bootstrap: {\n    millis: 4000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  mount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  unmount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  unload: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  update: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n};\n\nexport function setBootstrapMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        16,\n        __DEV__ &&\n          `bootstrap max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.bootstrap = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setMountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        17,\n        __DEV__ &&\n          `mount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.mount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setUnmountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        18,\n        __DEV__ &&\n          `unmount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unmount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setUnloadMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        19,\n        __DEV__ &&\n          `unload max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unload = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function reasonableTime(appOrParcel, lifecycle) {\n  const timeoutConfig = appOrParcel.timeouts[lifecycle];\n  const warningPeriod = timeoutConfig.warningMillis;\n  const type = objectType(appOrParcel);\n\n  return new Promise((resolve, reject) => {\n    let finished = false;\n    let errored = false;\n\n    appOrParcel[lifecycle](getProps(appOrParcel))\n      .then((val) => {\n        finished = true;\n        resolve(val);\n      })\n      .catch((val) => {\n        finished = true;\n        reject(val);\n      });\n\n    setTimeout(() => maybeTimingOut(1), warningPeriod);\n    setTimeout(() => maybeTimingOut(true), timeoutConfig.millis);\n\n    const errMsg = formatErrorMessage(\n      31,\n      __DEV__ &&\n        `Lifecycle function ${lifecycle} for ${type} ${toName(\n          appOrParcel\n        )} lifecycle did not resolve or reject for ${timeoutConfig.millis} ms.`,\n      lifecycle,\n      type,\n      toName(appOrParcel),\n      timeoutConfig.millis\n    );\n\n    function maybeTimingOut(shouldError) {\n      if (!finished) {\n        if (shouldError === true) {\n          errored = true;\n          if (timeoutConfig.dieOnTimeout) {\n            reject(Error(errMsg));\n          } else {\n            console.error(errMsg);\n            //don't resolve or reject, we're waiting this one out\n          }\n        } else if (!errored) {\n          const numWarnings = shouldError;\n          const numMillis = numWarnings * warningPeriod;\n          console.warn(errMsg);\n          if (numMillis + warningPeriod < timeoutConfig.millis) {\n            setTimeout(() => maybeTimingOut(numWarnings + 1), warningPeriod);\n          }\n        }\n      }\n    }\n  });\n}\n\nexport function ensureValidAppTimeouts(timeouts) {\n  const result = {};\n\n  for (let key in globalTimeoutConfig) {\n    result[key] = assign(\n      {},\n      globalTimeoutConfig[key],\n      (timeouts && timeouts[key]) || {}\n    );\n  }\n\n  return result;\n}\n","import {\n  LOAD_ERROR,\n  NOT_BOOTSTRAPPED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  NOT_LOADED,\n  objectType,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport {\n  handleAppError,\n  formatErrorMessage,\n} from \"../applications/app-errors.js\";\nimport {\n  flattenFnArray,\n  smellsLikeAPromise,\n  validLifecycleFn,\n} from \"./lifecycle.helpers.js\";\nimport { getProps } from \"./prop.helpers.js\";\nimport { assign } from \"../utils/assign.js\";\n\nexport function toLoadPromise(app) {\n  return Promise.resolve().then(() => {\n    if (app.loadPromise) {\n      return app.loadPromise;\n    }\n\n    if (app.status !== NOT_LOADED && app.status !== LOAD_ERROR) {\n      return app;\n    }\n\n    app.status = LOADING_SOURCE_CODE;\n\n    let appOpts, isUserErr;\n\n    return (app.loadPromise = Promise.resolve()\n      .then(() => {\n        const loadPromise = app.loadApp(getProps(app));\n        if (!smellsLikeAPromise(loadPromise)) {\n          // The name of the app will be prepended to this error message inside of the handleAppError function\n          isUserErr = true;\n          throw Error(\n            formatErrorMessage(\n              33,\n              __DEV__ &&\n                `single-spa loading function did not return a promise. Check the second argument to registerApplication('${toName(\n                  app\n                )}', loadingFunction, activityFunction)`,\n              toName(app)\n            )\n          );\n        }\n        return loadPromise.then((val) => {\n          app.loadErrorTime = null;\n\n          appOpts = val;\n\n          let validationErrMessage, validationErrCode;\n\n          if (typeof appOpts !== \"object\") {\n            validationErrCode = 34;\n            if (__DEV__) {\n              validationErrMessage = `does not export anything`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.bootstrap)) {\n            validationErrCode = 35;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.mount)) {\n            validationErrCode = 36;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.unmount)) {\n            validationErrCode = 37;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          const type = objectType(appOpts);\n\n          if (validationErrCode) {\n            let appOptsStr;\n            try {\n              appOptsStr = JSON.stringify(appOpts);\n            } catch {}\n            console.error(\n              formatErrorMessage(\n                validationErrCode,\n                __DEV__ &&\n                  `The loading function for single-spa ${type} '${toName(\n                    app\n                  )}' resolved with the following, which does not have bootstrap, mount, and unmount functions`,\n                type,\n                toName(app),\n                appOptsStr\n              ),\n              appOpts\n            );\n            handleAppError(validationErrMessage, app, SKIP_BECAUSE_BROKEN);\n            return app;\n          }\n\n          if (appOpts.devtools && appOpts.devtools.overlays) {\n            app.devtools.overlays = assign(\n              {},\n              app.devtools.overlays,\n              appOpts.devtools.overlays\n            );\n          }\n\n          app.status = NOT_BOOTSTRAPPED;\n          app.bootstrap = flattenFnArray(appOpts, \"bootstrap\");\n          app.mount = flattenFnArray(appOpts, \"mount\");\n          app.unmount = flattenFnArray(appOpts, \"unmount\");\n          app.unload = flattenFnArray(appOpts, \"unload\");\n          app.timeouts = ensureValidAppTimeouts(appOpts.timeouts);\n\n          delete app.loadPromise;\n\n          return app;\n        });\n      })\n      .catch((err) => {\n        delete app.loadPromise;\n\n        let newStatus;\n        if (isUserErr) {\n          newStatus = SKIP_BECAUSE_BROKEN;\n        } else {\n          newStatus = LOAD_ERROR;\n          app.loadErrorTime = new Date().getTime();\n        }\n        handleAppError(err, app, newStatus);\n\n        return app;\n      }));\n  });\n}\n","export const isInBrowser = typeof window !== \"undefined\";\n","import { reroute } from \"./reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\nimport { isInBrowser } from \"../utils/runtime-environment.js\";\n\n/* We capture navigation event listeners so that we can make sure\n * that application navigation listeners are not called until\n * single-spa has ensured that the correct applications are\n * unmounted and mounted.\n */\nconst capturedEventListeners = {\n  hashchange: [],\n  popstate: [],\n};\n\nexport const routingEventsListeningTo = [\"hashchange\", \"popstate\"];\n\nexport function navigateToUrl(obj) {\n  let url;\n  if (typeof obj === \"string\") {\n    url = obj;\n  } else if (this && this.href) {\n    url = this.href;\n  } else if (\n    obj &&\n    obj.currentTarget &&\n    obj.currentTarget.href &&\n    obj.preventDefault\n  ) {\n    url = obj.currentTarget.href;\n    obj.preventDefault();\n  } else {\n    throw Error(\n      formatErrorMessage(\n        14,\n        __DEV__ &&\n          `singleSpaNavigate/navigateToUrl must be either called with a string url, with an <a> tag as its context, or with an event whose currentTarget is an <a> tag`\n      )\n    );\n  }\n\n  const current = parseUri(window.location.href);\n  const destination = parseUri(url);\n\n  if (url.indexOf(\"#\") === 0) {\n    window.location.hash = destination.hash;\n  } else if (current.host !== destination.host && destination.host) {\n    if (process.env.BABEL_ENV === \"test\") {\n      return { wouldHaveReloadedThePage: true };\n    } else {\n      window.location.href = url;\n    }\n  } else if (\n    destination.pathname === current.pathname &&\n    destination.search === current.pathname\n  ) {\n    window.location.hash = destination.hash;\n  } else {\n    // different path, host, or query params\n    window.history.pushState(null, null, url);\n  }\n}\n\nexport function callCapturedEventListeners(eventArguments) {\n  if (eventArguments) {\n    const eventType = eventArguments[0].type;\n    if (routingEventsListeningTo.indexOf(eventType) >= 0) {\n      capturedEventListeners[eventType].forEach((listener) => {\n        try {\n          // The error thrown by application event listener should not break single-spa down.\n          // Just like https://github.com/single-spa/single-spa/blob/85f5042dff960e40936f3a5069d56fc9477fac04/src/navigation/reroute.js#L140-L146 did\n          listener.apply(this, eventArguments);\n        } catch (e) {\n          setTimeout(() => {\n            throw e;\n          });\n        }\n      });\n    }\n  }\n}\n\nlet urlRerouteOnly;\n\nexport function setUrlRerouteOnly(val) {\n  urlRerouteOnly = val;\n}\n\nfunction urlReroute() {\n  reroute([], arguments);\n}\n\nif (isInBrowser) {\n  // We will trigger an app change for any routing events.\n  window.addEventListener(\"hashchange\", urlReroute);\n  window.addEventListener(\"popstate\", urlReroute);\n\n  // Monkeypatch addEventListener so that we can ensure correct timing\n  const originalAddEventListener = window.addEventListener;\n  const originalRemoveEventListener = window.removeEventListener;\n  window.addEventListener = function (eventName, fn) {\n    if (typeof fn === \"function\") {\n      if (\n        routingEventsListeningTo.indexOf(eventName) >= 0 &&\n        !find(capturedEventListeners[eventName], (listener) => listener === fn)\n      ) {\n        capturedEventListeners[eventName].push(fn);\n        return;\n      }\n    }\n\n    return originalAddEventListener.apply(this, arguments);\n  };\n\n  window.removeEventListener = function (eventName, listenerFn) {\n    if (typeof listenerFn === \"function\") {\n      if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n        capturedEventListeners[eventName] = capturedEventListeners[\n          eventName\n        ].filter((fn) => fn !== listenerFn);\n        return;\n      }\n    }\n\n    return originalRemoveEventListener.apply(this, arguments);\n  };\n\n  window.history.pushState = patchedUpdateState(window.history.pushState);\n  window.history.replaceState = patchedUpdateState(window.history.replaceState);\n\n  function patchedUpdateState(updateState) {\n    return function () {\n      const urlBefore = window.location.href;\n      const result = updateState.apply(this, arguments);\n      const urlAfter = window.location.href;\n\n      if (!urlRerouteOnly || urlBefore !== urlAfter) {\n        urlReroute(createPopStateEvent(window.history.state));\n      }\n\n      return result;\n    };\n  }\n\n  function createPopStateEvent(state) {\n    // https://github.com/single-spa/single-spa/issues/224 and https://github.com/single-spa/single-spa-angular/issues/49\n    // We need a popstate event even though the browser doesn't do one by default when you call replaceState, so that\n    // all the applications can reroute.\n    try {\n      return new PopStateEvent(\"popstate\", { state });\n    } catch (err) {\n      // IE 11 compatibility https://github.com/single-spa/single-spa/issues/299\n      // https://docs.microsoft.com/en-us/openspecs/ie_standards/ms-html5e/bd560f47-b349-4d2c-baa8-f1560fb489dd\n      const evt = document.createEvent(\"PopStateEvent\");\n      evt.initPopStateEvent(\"popstate\", false, false, state);\n      return evt;\n    }\n  }\n\n  /* For convenience in `onclick` attributes, we expose a global function for navigating to\n   * whatever an <a> tag's href is.\n   */\n  window.singleSpaNavigate = navigateToUrl;\n}\n\nfunction parseUri(str) {\n  const anchor = document.createElement(\"a\");\n  anchor.href = str;\n  return anchor;\n}\n","import { routingEventsListeningTo } from \"./navigation/navigation-events.js\";\n\nlet hasInitialized = false;\n\nexport function ensureJQuerySupport(jQuery = window.jQuery) {\n  if (!jQuery) {\n    if (window.$ && window.$.fn && window.$.fn.jquery) {\n      jQuery = window.$;\n    }\n  }\n\n  if (jQuery && !hasInitialized) {\n    const originalJQueryOn = jQuery.fn.on;\n    const originalJQueryOff = jQuery.fn.off;\n\n    jQuery.fn.on = function (eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOn,\n        window.addEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    jQuery.fn.off = function (eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOff,\n        window.removeEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    hasInitialized = true;\n  }\n}\n\nfunction captureRoutingEvents(\n  originalJQueryFunction,\n  nativeFunctionToCall,\n  eventString,\n  fn,\n  originalArgs\n) {\n  if (typeof eventString !== \"string\") {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n\n  const eventNames = eventString.split(/\\s+/);\n  eventNames.forEach((eventName) => {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n      nativeFunctionToCall(eventName, fn);\n      eventString = eventString.replace(eventName, \"\");\n    }\n  });\n\n  if (eventString.trim() === \"\") {\n    return this;\n  } else {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n}\n","import {\n  NOT_MOUNTED,\n  UNLOADING,\n  NOT_LOADED,\n  SKIP_BECAUSE_BROKEN,\n  isntActive,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nconst appsToUnload = {};\n\nexport function toUnloadPromise(app) {\n  return Promise.resolve().then(() => {\n    const unloadInfo = appsToUnload[toName(app)];\n\n    if (!unloadInfo) {\n      /* No one has called unloadApplication for this app,\n       */\n      return app;\n    }\n\n    if (app.status === NOT_LOADED) {\n      /* This app is already unloaded. We just need to clean up\n       * anything that still thinks we need to unload the app.\n       */\n      finishUnloadingApp(app, unloadInfo);\n      return app;\n    }\n\n    if (app.status === UNLOADING) {\n      /* Both unloadApplication and reroute want to unload this app.\n       * It only needs to be done once, though.\n       */\n      return unloadInfo.promise.then(() => app);\n    }\n\n    if (app.status !== NOT_MOUNTED) {\n      /* The app cannot be unloaded until it is unmounted.\n       */\n      return app;\n    }\n\n    app.status = UNLOADING;\n    return reasonableTime(app, \"unload\")\n      .then(() => {\n        finishUnloadingApp(app, unloadInfo);\n        return app;\n      })\n      .catch((err) => {\n        errorUnloadingApp(app, unloadInfo, err);\n        return app;\n      });\n  });\n}\n\nfunction finishUnloadingApp(app, unloadInfo) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  app.status = NOT_LOADED;\n\n  /* resolve the promise of whoever called unloadApplication.\n   * This should be done after all other cleanup/bookkeeping\n   */\n  unloadInfo.resolve();\n}\n\nfunction errorUnloadingApp(app, unloadInfo, err) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  unloadInfo.reject(err);\n}\n\nexport function addAppToUnload(app, promiseGetter, resolve, reject) {\n  appsToUnload[toName(app)] = { app, resolve, reject };\n  Object.defineProperty(appsToUnload[toName(app)], \"promise\", {\n    get: promiseGetter,\n  });\n}\n\nexport function getAppUnloadInfo(appName) {\n  return appsToUnload[appName];\n}\n\nexport function getAppsToUnload() {\n  return Object.keys(appsToUnload)\n    .map((appName) => appsToUnload[appName].app)\n    .filter(isntActive);\n}\n","import { ensureJQuerySupport } from \"../jquery-support.js\";\nimport {\n  isActive,\n  isLoaded,\n  isntLoaded,\n  toName,\n  NOT_LOADED,\n  shouldBeActive,\n  shouldntBeActive,\n  isntActive,\n  notSkipped,\n  withoutLoadErrors,\n} from \"./app.helpers.js\";\nimport { reroute } from \"../navigation/reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  toUnloadPromise,\n  getAppUnloadInfo,\n  addAppToUnload,\n} from \"../lifecycles/unload.js\";\nimport { formatErrorMessage } from \"./app-errors.js\";\nimport { isInBrowser } from \"../utils/runtime-environment.js\";\nimport { assign } from \"../utils/assign\";\n\nconst apps = [];\n\nexport function getMountedApps() {\n  return apps.filter(isActive).map(toName);\n}\n\nexport function getAppNames() {\n  return apps.map(toName);\n}\n\n// used in devtools, not (currently) exposed as a single-spa API\nexport function getRawAppData() {\n  return [...apps];\n}\n\nexport function getAppStatus(appName) {\n  const app = find(apps, (app) => toName(app) === appName);\n  return app ? app.status : null;\n}\n\nexport function registerApplication(\n  appNameOrConfig,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  const registration = sanitizeArguments(\n    appNameOrConfig,\n    appOrLoadApp,\n    activeWhen,\n    customProps\n  );\n\n  if (getAppNames().indexOf(registration.name) !== -1)\n    throw Error(\n      formatErrorMessage(\n        21,\n        __DEV__ &&\n          `There is already an app registered with name ${registration.name}`,\n        registration.name\n      )\n    );\n\n  apps.push(\n    assign(\n      {\n        loadErrorTime: null,\n        status: NOT_LOADED,\n        parcels: {},\n        devtools: {\n          overlays: {\n            options: {},\n            selectors: [],\n          },\n        },\n      },\n      registration\n    )\n  );\n\n  if (isInBrowser) {\n    ensureJQuerySupport();\n    reroute();\n  }\n}\n\nexport function checkActivityFunctions(location) {\n  return apps.filter((app) => app.activeWhen(location)).map(toName);\n}\n\nexport function getAppsToLoad() {\n  return apps\n    .filter(notSkipped)\n    .filter(withoutLoadErrors)\n    .filter(isntLoaded)\n    .filter(shouldBeActive);\n}\n\nexport function getAppsToUnmount() {\n  return apps.filter(notSkipped).filter(isActive).filter(shouldntBeActive);\n}\n\nexport function getAppsToMount() {\n  return apps\n    .filter(notSkipped)\n    .filter(isntActive)\n    .filter(isLoaded)\n    .filter(shouldBeActive);\n}\n\nexport function unregisterApplication(appName) {\n  if (!apps.find((app) => toName(app) === appName)) {\n    throw Error(\n      formatErrorMessage(\n        25,\n        __DEV__ &&\n          `Cannot unregister application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  return unloadApplication(appName).then(() => {\n    const appIndex = apps.findIndex((app) => toName(app) === appName);\n    apps.splice(appIndex, 1);\n  });\n}\n\nexport function unloadApplication(appName, opts = { waitForUnmount: false }) {\n  if (typeof appName !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        26,\n        __DEV__ && `unloadApplication requires a string 'appName'`\n      )\n    );\n  }\n  const app = find(apps, (App) => toName(App) === appName);\n  if (!app) {\n    throw Error(\n      formatErrorMessage(\n        27,\n        __DEV__ &&\n          `Could not unload application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  const appUnloadInfo = getAppUnloadInfo(toName(app));\n  if (opts && opts.waitForUnmount) {\n    // We need to wait for unmount before unloading the app\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this, too\n      return appUnloadInfo.promise;\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      const promise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => promise, resolve, reject);\n      });\n      return promise;\n    }\n  } else {\n    /* We should unmount the app, unload it, and remount it immediately.\n     */\n\n    let resultPromise;\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this app to unload\n      resultPromise = appUnloadInfo.promise;\n      immediatelyUnloadApp(app, appUnloadInfo.resolve, appUnloadInfo.reject);\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      resultPromise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => resultPromise, resolve, reject);\n        immediatelyUnloadApp(app, resolve, reject);\n      });\n    }\n\n    return resultPromise;\n  }\n}\n\nfunction immediatelyUnloadApp(app, resolve, reject) {\n  toUnmountPromise(app)\n    .then(toUnloadPromise)\n    .then(() => {\n      resolve();\n      setTimeout(() => {\n        // reroute, but the unload promise is done\n        reroute();\n      });\n    })\n    .catch(reject);\n}\n\nfunction validateRegisterWithArguments(\n  name,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  if (typeof name !== \"string\" || name.length === 0)\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          `The 1st argument to registerApplication must be a non-empty string 'appName'`\n      )\n    );\n\n  if (!appOrLoadApp)\n    throw Error(\n      formatErrorMessage(\n        23,\n        __DEV__ &&\n          \"The 2nd argument to registerApplication must be an application or loading application function\"\n      )\n    );\n\n  if (typeof activeWhen !== \"function\")\n    throw Error(\n      formatErrorMessage(\n        24,\n        __DEV__ &&\n          \"The 3rd argument to registerApplication must be an activeWhen function\"\n      )\n    );\n\n  if (\n    !!customProps &&\n    (typeof customProps !== \"object\" || Array.isArray(customProps))\n  )\n    throw Error(\n      formatErrorMessage(\n        22,\n        __DEV__ &&\n          \"The optional 4th argument is a customProps and must be an object\"\n      )\n    );\n}\n\nexport function validateRegisterWithConfig(config) {\n  if (Array.isArray(config) || config === null)\n    throw Error(\n      formatErrorMessage(\n        39,\n        __DEV__ && \"Configuration object can't be an Array or null!\"\n      )\n    );\n  const validKeys = [\"name\", \"app\", \"activeWhen\", \"customProps\"];\n  const invalidKeys = Object.keys(config).reduce(\n    (invalidKeys, prop) =>\n      validKeys.includes(prop) ? invalidKeys : invalidKeys.concat(prop),\n    []\n  );\n  if (invalidKeys.length !== 0)\n    throw Error(\n      formatErrorMessage(\n        38,\n        __DEV__ &&\n          `The configuration object accepts only: ${validKeys.join(\n            \", \"\n          )}. Invalid keys: ${invalidKeys.join(\", \")}.`,\n        validKeys.join(\", \"),\n        invalidKeys.join(\", \")\n      )\n    );\n  if (typeof config.name !== \"string\" || config.name.length === 0)\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          \"The config.name on registerApplication must be a non-empty string\"\n      )\n    );\n  if (typeof config.app !== \"object\" && typeof config.app !== \"function\")\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          \"The config.app on registerApplication must be an application or a loading function\"\n      )\n    );\n  const allowsStringAndFunction = (activeWhen) =>\n    typeof activeWhen === \"string\" || typeof activeWhen === \"function\";\n  if (\n    !allowsStringAndFunction(config.activeWhen) &&\n    !(\n      Array.isArray(config.activeWhen) &&\n      config.activeWhen.every(allowsStringAndFunction)\n    )\n  )\n    throw Error(\n      formatErrorMessage(\n        24,\n        __DEV__ &&\n          \"The config.activeWhen on registerApplication must be a string, function or an array with both\"\n      )\n    );\n  if (\n    !(\n      !config.customProps ||\n      (typeof config.customProps === \"object\" &&\n        !Array.isArray(config.customProps))\n    )\n  )\n    throw Error(\n      formatErrorMessage(\n        22,\n        __DEV__ && \"The optional config.customProps must be an object\"\n      )\n    );\n}\n\nfunction sanitizeArguments(\n  appNameOrConfig,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  const usingObjectAPI = typeof appNameOrConfig === \"object\";\n\n  const registration = {\n    name: null,\n    loadApp: null,\n    activeWhen: null,\n    customProps: null,\n  };\n\n  if (usingObjectAPI) {\n    validateRegisterWithConfig(appNameOrConfig);\n    registration.name = appNameOrConfig.name;\n    registration.loadApp = appNameOrConfig.app;\n    registration.activeWhen = appNameOrConfig.activeWhen;\n    registration.customProps = appNameOrConfig.customProps;\n  } else {\n    validateRegisterWithArguments(\n      appNameOrConfig,\n      appOrLoadApp,\n      activeWhen,\n      customProps\n    );\n    registration.name = appNameOrConfig;\n    registration.loadApp = appOrLoadApp;\n    registration.activeWhen = activeWhen;\n    registration.customProps = customProps;\n  }\n\n  registration.loadApp = sanitizeLoadApp(registration.loadApp);\n  registration.customProps = sanitizeCustomProps(registration.customProps);\n  registration.activeWhen = sanitizeActiveWhen(registration.activeWhen);\n\n  return registration;\n}\n\nfunction sanitizeLoadApp(loadApp) {\n  if (typeof loadApp !== \"function\") {\n    return () => Promise.resolve(loadApp);\n  }\n\n  return loadApp;\n}\n\nfunction sanitizeCustomProps(customProps) {\n  return customProps ? customProps : {};\n}\n\nfunction sanitizeActiveWhen(activeWhen) {\n  let activeWhenArray = Array.isArray(activeWhen) ? activeWhen : [activeWhen];\n  activeWhenArray = activeWhenArray.map((activeWhenOrPath) =>\n    typeof activeWhenOrPath === \"function\"\n      ? activeWhenOrPath\n      : pathToActiveWhen(activeWhenOrPath)\n  );\n\n  return (location) =>\n    activeWhenArray.some((activeWhen) => activeWhen(location));\n}\n\nfunction pathToActiveWhen(path) {\n  const regex = toDynamicPathValidatorRegex(path);\n\n  return (location) => {\n    const route = location.href.replace(location.origin, \"\");\n    return regex.test(route);\n  };\n}\n\nexport function toDynamicPathValidatorRegex(path) {\n  let lastIndex = 0,\n    inDynamic = false,\n    regexStr = \"^\";\n\n  for (let charIndex = 0; charIndex < path.length; charIndex++) {\n    const char = path[charIndex];\n    const startOfDynamic = !inDynamic && char === \":\";\n    const endOfDynamic = inDynamic && char === \"/\";\n    if (startOfDynamic || endOfDynamic) {\n      appendToRegex(charIndex);\n    }\n  }\n\n  appendToRegex(path.length);\n\n  return new RegExp(regexStr, \"i\");\n\n  function appendToRegex(index) {\n    const anyCharMaybeTrailingSlashRegex = \"[^/]+/?\";\n    const commonStringSubPath = escapeStrRegex(path.slice(lastIndex, index));\n\n    regexStr += inDynamic\n      ? anyCharMaybeTrailingSlashRegex\n      : commonStringSubPath;\n    inDynamic = !inDynamic;\n    lastIndex = index;\n  }\n\n  function escapeStrRegex(str) {\n    // borrowed from https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\n    return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n  }\n}\n","import CustomEvent from \"custom-event\";\nimport { isStarted } from \"../start.js\";\nimport { toLoadPromise } from \"../lifecycles/load.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  getMountedApps,\n  getAppsToLoad,\n  getAppsToUnmount,\n  getAppsToMount,\n} from \"../applications/apps.js\";\nimport { callCapturedEventListeners } from \"./navigation-events.js\";\nimport { getAppsToUnload, toUnloadPromise } from \"../lifecycles/unload.js\";\n\nlet appChangeUnderway = false,\n  peopleWaitingOnAppChange = [];\n\nexport function triggerAppChange() {\n  // Call reroute with no arguments, intentionally\n  return reroute();\n}\n\nexport function reroute(pendingPromises = [], eventArguments) {\n  if (appChangeUnderway) {\n    return new Promise((resolve, reject) => {\n      peopleWaitingOnAppChange.push({\n        resolve,\n        reject,\n        eventArguments,\n      });\n    });\n  }\n\n  let wasNoOp = true;\n\n  if (isStarted()) {\n    appChangeUnderway = true;\n    return performAppChanges();\n  } else {\n    return loadApps();\n  }\n\n  function loadApps() {\n    return Promise.resolve().then(() => {\n      const loadPromises = getAppsToLoad().map(toLoadPromise);\n\n      if (loadPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      return (\n        Promise.all(loadPromises)\n          .then(callAllEventListeners)\n          // there are no mounted apps, before start() is called, so we always return []\n          .then(() => [])\n          .catch((err) => {\n            callAllEventListeners();\n            throw err;\n          })\n      );\n    });\n  }\n\n  function performAppChanges() {\n    return Promise.resolve().then(() => {\n      window.dispatchEvent(\n        new CustomEvent(\n          \"single-spa:before-routing-event\",\n          getCustomEventDetail()\n        )\n      );\n      const unloadPromises = getAppsToUnload().map(toUnloadPromise);\n\n      const unmountUnloadPromises = getAppsToUnmount()\n        .map(toUnmountPromise)\n        .map((unmountPromise) => unmountPromise.then(toUnloadPromise));\n\n      const allUnmountPromises = unmountUnloadPromises.concat(unloadPromises);\n      if (allUnmountPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      const unmountAllPromise = Promise.all(allUnmountPromises);\n\n      const appsToLoad = getAppsToLoad();\n\n      /* We load and bootstrap apps while other apps are unmounting, but we\n       * wait to mount the app until all apps are finishing unmounting\n       */\n      const loadThenMountPromises = appsToLoad.map((app) => {\n        return toLoadPromise(app)\n          .then(toBootstrapPromise)\n          .then((app) => {\n            return unmountAllPromise.then(() => toMountPromise(app));\n          });\n      });\n      if (loadThenMountPromises.length > 0) {\n        wasNoOp = false;\n      }\n\n      /* These are the apps that are already bootstrapped and just need\n       * to be mounted. They each wait for all unmounting apps to finish up\n       * before they mount.\n       */\n      const mountPromises = getAppsToMount()\n        .filter((appToMount) => appsToLoad.indexOf(appToMount) < 0)\n        .map((appToMount) => {\n          return toBootstrapPromise(appToMount)\n            .then(() => unmountAllPromise)\n            .then(() => toMountPromise(appToMount));\n        });\n      if (mountPromises.length > 0) {\n        wasNoOp = false;\n      }\n      return unmountAllPromise\n        .catch((err) => {\n          callAllEventListeners();\n          throw err;\n        })\n        .then(() => {\n          /* Now that the apps that needed to be unmounted are unmounted, their DOM navigation\n           * events (like hashchange or popstate) should have been cleaned up. So it's safe\n           * to let the remaining captured event listeners to handle about the DOM event.\n           */\n          callAllEventListeners();\n\n          return Promise.all(loadThenMountPromises.concat(mountPromises))\n            .catch((err) => {\n              pendingPromises.forEach((promise) => promise.reject(err));\n              throw err;\n            })\n            .then(finishUpAndReturn);\n        });\n    });\n  }\n\n  function finishUpAndReturn() {\n    const returnValue = getMountedApps();\n    pendingPromises.forEach((promise) => promise.resolve(returnValue));\n\n    try {\n      const appChangeEventName = wasNoOp\n        ? \"single-spa:no-app-change\"\n        : \"single-spa:app-change\";\n      window.dispatchEvent(\n        new CustomEvent(appChangeEventName, getCustomEventDetail())\n      );\n      window.dispatchEvent(\n        new CustomEvent(\"single-spa:routing-event\", getCustomEventDetail())\n      );\n    } catch (err) {\n      /* We use a setTimeout because if someone else's event handler throws an error, single-spa\n       * needs to carry on. If a listener to the event throws an error, it's their own fault, not\n       * single-spa's.\n       */\n      setTimeout(() => {\n        throw err;\n      });\n    }\n\n    /* Setting this allows for subsequent calls to reroute() to actually perform\n     * a reroute instead of just getting queued behind the current reroute call.\n     * We want to do this after the mounting/unmounting is done but before we\n     * resolve the promise for the `reroute` function.\n     */\n    appChangeUnderway = false;\n\n    if (peopleWaitingOnAppChange.length > 0) {\n      /* While we were rerouting, someone else triggered another reroute that got queued.\n       * So we need reroute again.\n       */\n      const nextPendingPromises = peopleWaitingOnAppChange;\n      peopleWaitingOnAppChange = [];\n      reroute(nextPendingPromises);\n    }\n\n    return returnValue;\n  }\n\n  /* We need to call all event listeners that have been delayed because they were\n   * waiting on single-spa. This includes haschange and popstate events for both\n   * the current run of performAppChanges(), but also all of the queued event listeners.\n   * We want to call the listeners in the same order as if they had not been delayed by\n   * single-spa, which means queued ones first and then the most recent one.\n   */\n  function callAllEventListeners() {\n    pendingPromises.forEach((pendingPromise) => {\n      callCapturedEventListeners(pendingPromise.eventArguments);\n    });\n\n    callCapturedEventListeners(eventArguments);\n  }\n\n  function getCustomEventDetail() {\n    const result = { detail: {} };\n\n    if (eventArguments && eventArguments[0]) {\n      result.detail.originalEvent = eventArguments[0];\n    }\n\n    return result;\n  }\n}\n","import { reroute } from \"./navigation/reroute.js\";\nimport { formatErrorMessage } from \"./applications/app-errors.js\";\nimport { setUrlRerouteOnly } from \"./navigation/navigation-events.js\";\nimport { isInBrowser } from \"./utils/runtime-environment.js\";\n\nlet started = false;\n\nexport function start(opts) {\n  started = true;\n  if (opts && opts.urlRerouteOnly) {\n    setUrlRerouteOnly(opts.urlRerouteOnly);\n  }\n  if (isInBrowser) {\n    reroute();\n  }\n}\n\nexport function isStarted() {\n  return started;\n}\n\nif (isInBrowser) {\n  setTimeout(() => {\n    if (!started) {\n      console.warn(\n        formatErrorMessage(\n          1,\n          __DEV__ &&\n            `singleSpa.start() has not been called, 5000ms after single-spa was loaded. Before start() is called, apps can be declared and loaded, but not bootstrapped or mounted.`\n        )\n      );\n    }\n  }, 5000);\n}\n","import { getRawAppData, unregisterApplication } from \"../applications/apps\";\nimport { reroute } from \"../navigation/reroute\";\nimport { NOT_LOADED } from \"../applications/app.helpers\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\n\nexport default {\n  getRawAppData,\n  reroute,\n  NOT_LOADED,\n  toLoadPromise,\n  toBootstrapPromise,\n  unregisterApplication,\n};\n","export { start } from \"./start.js\";\nexport { ensureJQuerySupport } from \"./jquery-support.js\";\nexport {\n  setBootstrapMaxTime,\n  setMountMaxTime,\n  setUnmountMaxTime,\n  setUnloadMaxTime,\n} from \"./applications/timeouts.js\";\nexport {\n  registerApplication,\n  getMountedApps,\n  getAppStatus,\n  unloadApplication,\n  checkActivityFunctions,\n  getAppNames,\n} from \"./applications/apps.js\";\nexport { navigateToUrl } from \"./navigation/navigation-events.js\";\nexport { triggerAppChange } from \"./navigation/reroute.js\";\nexport {\n  addErrorHandler,\n  removeErrorHandler,\n} from \"./applications/app-errors.js\";\nexport { mountRootParcel } from \"./parcels/mount-parcel.js\";\n\nexport {\n  NOT_LOADED,\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  MOUNTING,\n  UPDATING,\n  LOAD_ERROR,\n  MOUNTED,\n  UNMOUNTING,\n  SKIP_BECAUSE_BROKEN,\n} from \"./applications/app.helpers.js\";\n\nimport devtools from \"./devtools/devtools\";\nimport { isInBrowser } from \"./utils/runtime-environment.js\";\n\nif (isInBrowser && window.__SINGLE_SPA_DEVTOOLS__) {\n  window.__SINGLE_SPA_DEVTOOLS__.exposedMethods = devtools;\n}\n"],"names":["NativeCustomEvent","CustomEvent","p","detail","foo","type","e","useNative","document","createEvent","params","initCustomEvent","bubbles","cancelable","createEventObject","Boolean","errorHandlers","handleAppError","err","app","newStatus","transformedErr","transformErr","length","forEach","handler","setTimeout","addErrorHandler","Error","formatErrorMessage","push","removeErrorHandler","removedSomething","filter","h","isHandler","code","msg","args","join","ogErr","appOrParcel","errPrefix","objectType","toName","status","result","message","console","warn","JSON","stringify","appOrParcelName","NOT_LOADED","LOADING_SOURCE_CODE","NOT_BOOTSTRAPPED","BOOTSTRAPPING","NOT_MOUNTED","MOUNTING","MOUNTED","UPDATING","UNMOUNTING","LOAD_ERROR","SKIP_BECAUSE_BROKEN","isActive","isntActive","isLoaded","isntLoaded","shouldBeActive","activeWhen","window","location","shouldntBeActive","notSkipped","item","withoutLoadErrors","Date","getTime","loadErrorTime","name","isParcel","unmountThisParcel","assign","i","arguments","key","find","arr","func","validLifecycleFn","fn","Array","isArray","flattenFnArray","lifecycle","fns","Promise","resolve","props","reduce","resultPromise","index","then","thisPromise","smellsLikeAPromise","reject","promise","catch","toBootstrapPromise","hardFail","reasonableTime","toUnmountPromise","unmountChildrenParcels","Object","keys","parcels","map","parcelId","all","unmountAppOrParcel","parcelError","parentError","beforeFirstMountFired","firstMountFired","toMountPromise","dispatchEvent","setSkipBecauseBroken","parcelCount","rootParcels","mountRootParcel","mountParcel","apply","config","customProps","owningAppOrParcel","this","domElement","id","passedConfigLoadingFunction","configLoadingFunction","parcel","parentName","value","resolveUnmount","rejectUnmount","externalRepresentation","loadPromise","bootstrap","mount","unmount","update","timeouts","ensureValidAppTimeouts","promiseWithoutReturnValue","toUpdatePromise","bootstrapPromise","mountPromise","unmountPromise","getStatus","getProps","bind","singleSpa","unmountSelf","globalTimeoutConfig","millis","dieOnTimeout","warningMillis","unload","setBootstrapMaxTime","time","setMountMaxTime","setUnmountMaxTime","setUnloadMaxTime","timeoutConfig","warningPeriod","finished","errored","val","maybeTimingOut","errMsg","shouldError","error","numWarnings","numMillis","toLoadPromise","appOpts","isUserErr","loadApp","validationErrCode","appOptsStr","validationErrMessage","devtools","overlays","isInBrowser","capturedEventListeners","hashchange","popstate","routingEventsListeningTo","navigateToUrl","obj","url","href","currentTarget","preventDefault","current","parseUri","destination","indexOf","hash","host","pathname","search","history","pushState","callCapturedEventListeners","eventArguments","eventType","listener","urlRerouteOnly","urlReroute","reroute","addEventListener","originalAddEventListener","originalRemoveEventListener","removeEventListener","patchedUpdateState","updateState","urlBefore","urlAfter","createPopStateEvent","state","PopStateEvent","evt","initPopStateEvent","eventName","listenerFn","replaceState","singleSpaNavigate","str","anchor","createElement","hasInitialized","ensureJQuerySupport","jQuery","$","jquery","originalJQueryOn","on","originalJQueryOff","off","eventString","captureRoutingEvents","call","originalJQueryFunction","nativeFunctionToCall","originalArgs","split","replace","trim","appsToUnload","toUnloadPromise","unloadInfo","finishUnloadingApp","errorUnloadingApp","addAppToUnload","promiseGetter","defineProperty","get","apps","getMountedApps","getAppNames","getAppStatus","appName","registerApplication","appNameOrConfig","appOrLoadApp","registration","validKeys","invalidKeys","prop","includes","concat","allowsStringAndFunction","every","validateRegisterWithConfig","validateRegisterWithArguments","sanitizeCustomProps","activeWhenArray","activeWhenOrPath","path","regex","lastIndex","inDynamic","regexStr","charIndex","char","endOfDynamic","appendToRegex","RegExp","commonStringSubPath","slice","toDynamicPathValidatorRegex","route","origin","test","pathToActiveWhen","some","sanitizeActiveWhen","sanitizeArguments","options","selectors","checkActivityFunctions","getAppsToLoad","unloadApplication","opts","waitForUnmount","App","appUnloadInfo","getAppUnloadInfo","immediatelyUnloadApp","appChangeUnderway","peopleWaitingOnAppChange","triggerAppChange","pendingPromises","wasNoOp","started","getCustomEventDetail","unloadPromises","allUnmountPromises","unmountAllPromise","appsToLoad","loadThenMountPromises","mountPromises","appToMount","callAllEventListeners","finishUpAndReturn","loadPromises","returnValue","appChangeEventName","nextPendingPromises","pendingPromise","originalEvent","start","getRawAppData","unregisterApplication","appIndex","findIndex","splice","__SINGLE_SPA_DEVTOOLS__","exposedMethods"],"mappings":"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"}